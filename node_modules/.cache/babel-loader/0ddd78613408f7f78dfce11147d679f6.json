{"ast":null,"code":"import React, { useState } from 'react';\nimport { storage, db } from '../admin/Config';\n\nconst Addproduct = require('../admin/Addproduct');\n\nconst fs = require('fs');\n\nexports.create = async (req, res) => {\n  const {\n    filename\n  } = req.file;\n  const {\n    productName,\n    productDesc,\n    productPrice,\n    productCategory,\n    productQty\n  } = req.body;\n\n  try {\n    let product = new Addproduct();\n    product.fileName = filename;\n    product.productName = productName;\n    product.productDesc = productDesc;\n    product.productPrice = productPrice;\n    product.productCategory = productCategory;\n    product.productQty = productQty;\n    await product.save();\n    res.json({\n      successMessage: `${productName} was created`,\n      product\n    });\n  } catch (err) {\n    console.log(err, 'productController.create error');\n    res.status(500).json({\n      errorMessage: 'Please try again later'\n    });\n  }\n};\n\nexports.readAll = async (req, res) => {\n  try {\n    const products = await Addproduct.find({}).populate('productCategory', 'category');\n    res.json({\n      products\n    });\n  } catch (err) {\n    console.log(err, 'productController.readAll error');\n    res.status(500).json({\n      errorMessage: 'Please try again later'\n    });\n  }\n};\n\nexports.readByCount = async (req, res) => {\n  try {\n    const products = await Addproduct.find({}).populate('productCategory', 'category').limit(6);\n    res.json({\n      products\n    });\n  } catch (err) {\n    console.log(err, 'productController.readAll error');\n    res.status(500).json({\n      errorMessage: 'Please try again later'\n    });\n  }\n};\n\nexports.read = async (req, res) => {\n  try {\n    const productId = req.params.productId;\n    const product = await Addproduct.findById(productId);\n    res.json(product);\n  } catch (err) {\n    console.log(err, 'productController.read error');\n    res.status(500).json({\n      errorMessage: 'Please try again later'\n    });\n  }\n};\n\nexports.update = async (req, res) => {\n  const productId = req.params.productId;\n\n  if (req.file !== undefined) {\n    req.body.fileName = req.file.filename;\n  }\n\n  const oldProduct = await Addproduct.findByIdAndUpdate(productId, req.body);\n\n  if (req.file !== undefined && req.file.filename !== oldProduct.fileName) {\n    fs.unlink(`uploads/${oldProduct.fileName}`, err => {\n      if (err) throw err;\n      console.log('Image deleted from the filesystem');\n    });\n  }\n\n  res.json({\n    successMessage: 'Product successfully updated'\n  });\n};\n\nexports.delete = async (req, res) => {\n  try {\n    const productId = req.params.productId;\n    const deletedProduct = await Addproduct.findByIdAndDelete(productId);\n    fs.unlink(`uploads/${deletedProduct.fileName}`, err => {\n      if (err) throw err;\n      console.log('Image successfully deleted from filesystem: ', deletedProduct.fileName);\n    });\n    res.json(deletedProduct);\n  } catch (err) {\n    console.log(err, 'productController.delete error');\n    res.status(500).json({\n      errorMessage: 'Please try again later'\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Project 3/src/admin/Addproducts.js"],"names":["React","useState","storage","db","Addproduct","require","fs","exports","create","req","res","filename","file","productName","productDesc","productPrice","productCategory","productQty","body","product","fileName","save","json","successMessage","err","console","log","status","errorMessage","readAll","products","find","populate","readByCount","limit","read","productId","params","findById","update","undefined","oldProduct","findByIdAndUpdate","unlink","delete","deletedProduct","findByIdAndDelete"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { storage, db } from '../admin/Config'\r\n\r\nconst Addproduct = require('../admin/Addproduct');\r\nconst fs = require('fs');\r\n\r\nexports.create = async (req, res) => {\r\n\tconst { filename } = req.file;\r\n\tconst {\r\n\t\tproductName,\r\n\t\tproductDesc,\r\n\t\tproductPrice,\r\n\t\tproductCategory,\r\n\t\tproductQty,\r\n\t} = req.body;\r\n\r\n\ttry {\r\n\t\tlet product = new Addproduct();\r\n\t\tproduct.fileName = filename;\r\n\t\tproduct.productName = productName;\r\n\t\tproduct.productDesc = productDesc;\r\n\t\tproduct.productPrice = productPrice;\r\n\t\tproduct.productCategory = productCategory;\r\n\t\tproduct.productQty = productQty;\r\n\r\n\t\tawait product.save();\r\n\r\n\t\tres.json({\r\n\t\t\tsuccessMessage: `${productName} was created`,\r\n\t\t\tproduct,\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tconsole.log(err, 'productController.create error');\r\n\t\tres.status(500).json({\r\n\t\t\terrorMessage: 'Please try again later',\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexports.readAll = async (req, res) => {\r\n\ttry {\r\n\t\tconst products = await Addproduct.find({}).populate(\r\n\t\t\t'productCategory',\r\n\t\t\t'category'\r\n\t\t);\r\n\r\n\t\tres.json({ products });\r\n\t} catch (err) {\r\n\t\tconsole.log(err, 'productController.readAll error');\r\n\t\tres.status(500).json({\r\n\t\t\terrorMessage: 'Please try again later',\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexports.readByCount = async (req, res) => {\r\n\ttry {\r\n\t\tconst products = await Addproduct.find({})\r\n\t\t\t.populate('productCategory', 'category')\r\n\t\t\t.limit(6);\r\n\r\n\t\tres.json({ products });\r\n\t} catch (err) {\r\n\t\tconsole.log(err, 'productController.readAll error');\r\n\t\tres.status(500).json({\r\n\t\t\terrorMessage: 'Please try again later',\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexports.read = async (req, res) => {\r\n\ttry {\r\n\t\tconst productId = req.params.productId;\r\n\t\tconst product = await Addproduct.findById(productId);\r\n\r\n\t\tres.json(product);\r\n\t} catch (err) {\r\n\t\tconsole.log(err, 'productController.read error');\r\n\t\tres.status(500).json({\r\n\t\t\terrorMessage: 'Please try again later',\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexports.update = async (req, res) => {\r\n\tconst productId = req.params.productId;\r\n\r\n\tif (req.file !== undefined) {\r\n\t\treq.body.fileName = req.file.filename;\r\n\t}\r\n\r\n\tconst oldProduct = await Addproduct.findByIdAndUpdate(productId, req.body);\r\n\r\n\tif (req.file !== undefined && req.file.filename !== oldProduct.fileName) {\r\n\t\tfs.unlink(`uploads/${oldProduct.fileName}`, err => {\r\n\t\t\tif (err) throw err;\r\n\t\t\tconsole.log('Image deleted from the filesystem');\r\n\t\t});\r\n\t}\r\n\r\n\tres.json({\r\n\t\tsuccessMessage: 'Product successfully updated',\r\n\t});\r\n};\r\n\r\nexports.delete = async (req, res) => {\r\n\ttry {\r\n\t\tconst productId = req.params.productId;\r\n\t\tconst deletedProduct = await Addproduct.findByIdAndDelete(productId);\r\n\r\n\t\tfs.unlink(`uploads/${deletedProduct.fileName}`, err => {\r\n\t\t\tif (err) throw err;\r\n\t\t\tconsole.log(\r\n\t\t\t\t'Image successfully deleted from filesystem: ',\r\n\t\t\t\tdeletedProduct.fileName\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tres.json(deletedProduct);\r\n\t} catch (err) {\r\n\t\tconsole.log(err, 'productController.delete error');\r\n\t\tres.status(500).json({\r\n\t\t\terrorMessage: 'Please try again later',\r\n\t\t});\r\n\t}\r\n};"]},"metadata":{},"sourceType":"module"}